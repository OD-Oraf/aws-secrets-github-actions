# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  push:
    branches:
      - main
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Permission to get OIDC token
permissions:
  id-token: write
  contents: read

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: us-east-1
          retry-max-attempts: 2

      - name: Get SSM Parameters
        run: |
          # Get ruleset validation parameter
          RULESET_VALIDATION=$(aws ssm get-parameter --name "/mulesoft/anypoint-cli/ruleset-validation" --query "Parameter.Value" --output text)
          echo "RULESET_VALIDATION=$RULESET_VALIDATION" >> $GITHUB_ENV
          
          # Get mule rulesets parameter
          MULE_RULESETS=$(aws ssm get-parameter --name "/mulesoft/anypoint-cli/mule-rulesets" --query "Parameter.Value" --output text)
          echo "MULE_RULESETS=$MULE_RULESETS" >> $GITHUB_ENV
          
          # Get ruleset validation command parameter
          RULESET_VALIDATION_CMD=$(aws ssm get-parameter --name "/mulesoft/anypoint-cli/ruleset-validation-command" --query "Parameter.Value" --output text)
          echo "RULESET_VALIDATION_CMD=$RULESET_VALIDATION_CMD" >> $GITHUB_ENV
          
          echo "Successfully retrieved all SSM parameters"

      - name: Get secret from AWS Secrets Manager
        run: |
          SECRET_VALUE=$(aws secretsmanager get-secret-value --secret-id example_secret --query 'SecretString' --output text)
          echo "Secret value retrieved successfully"
          # Use the secret value in your workflow
          # echo "::add-mask::$SECRET_VALUE"  # Uncomment to mask the secret in logs

      - name: Run a one-line script
        run: echo Hello, world!

      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
